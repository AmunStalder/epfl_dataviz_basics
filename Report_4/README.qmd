---
title: "Applied Data Science: Communication and Visualisation - Project 1.4"
author: "Amun Stalder"
date: "2024-05-04"
format: 
  html:
    fig-width: 8
    fig-height: 4
    code-fold: false
---
```{r setup, include=FALSE}
#| warning: false
```

# Introduction to the Cartography Project
As part of the *Applied Data Science: Communication and Visualisation* course for
the Certificate of Open Studies (COS) of the EPFL, the students show their acquired skills
in small data science projects. This markdown file is about the reproduction of
a chart found in a brochure.

# Reproducing and improving the chart
## Task 1: Recreating the piechart

```{r}
#| warning: false

library(tibble)
library(ggplot2)
library(dplyr)
library(forcats)
library(waffle)
library(RColorBrewer)

df_pie <- tibble(
  category = c(
    "Admin",
    "Culture",
    "Environment",
    "Education",
    "Health",
    "Auto traffic",
    "Security",
    "Social",
    "Finance / Taxes",
    "Economy"),
  chf = c(
    3.77,
    1.60,
    1.19,
    28.92,
    14.78,
    4.09,
    7.60,
    28.50,
    5.47,
    4.08),
fill = c(
    "#a2dbc0",
    "#86c4a6",
    "#a2dbc0",
    "#0fa65d",
    "#86c4a6",
    "#a2dbc0",
    "#0fa65d",
    "#a2dbc0",
    "#86c4a6",
    "#0fa65d")
  ) %>% mutate(
    category = category %>% fct_inorder() %>% fct_rev()
  )

pie_chart <- df_pie %>% 
  ggplot(aes(x = "", y = chf, fill = category)) +
    geom_bar(stat = "identity", width = 1) +
    coord_polar("y", start = 0) +
    theme_void() +
    scale_fill_manual(values = df_pie$fill) +
    theme(legend.title = element_blank()) +
    labs(title = "Where the taxes in Lausanne Go")
  
pie_chart

```

## Task 2: Changing colors and highlighting categories
It makes more sense, to use a color palette that shows the top expenses in red
and less high expenses in green. Furthermore, the top 3 categories will bordered
in black.

```{r}

df_pie_reordered <- df_pie %>% 
  arrange(desc(chf)) %>% 
  mutate(
    color = ifelse(category %in% c("Health", "Social", "Education"),"black", NA),
    category = fct_inorder(category)
  ) %>% 
  arrange(chf)

pie_chart <- df_pie_reordered %>% 
  ggplot(aes(x = "", y = chf, fill = category)) +
    geom_bar(aes(color = color), linewidth = 1.2, stat = "identity", width = 1 ) +
    coord_polar("y", start = 0) +
    theme_void() +
    scale_fill_brewer(palette = "RdYlGn", direction = 1) +
    scale_color_identity() +
    # scale_fill_manual(values = df_pie$fill) +
    theme(legend.title = element_blank()) +
    labs(title = "Where the taxes in Lausanne Go")

pie_chart

```

## Task 3: Proposing two alternatives
Since piecharts are not very easily readable, It can make more sense to plot them
as simple barplot:

```{r}

bar_chart <- df_pie_reordered %>% 
  ggplot(aes(y = category %>% fct_rev(), x = chf, fill = category)) +
    geom_bar(aes(color = color), linewidth = 1.2, stat = "identity", width = 1 ) +
    theme_classic() +
    scale_fill_brewer(palette = "RdYlGn", direction = 1) +
    scale_color_identity() +
    theme(
      legend.title = element_blank(),
      legend.position = "none"
    ) +
    labs(
      x = "CHF",
      y = "") +
    labs(title = "Where the taxes in Lausanne Go")

bar_chart

```
Another cool way to plot relative amounts is to use are in a waffle chart:

```{r}

waffle_cahrt <- df_pie_reordered %>% 
  ggplot(aes(fill = category, values = chf %>%  round(0))) +
    geom_waffle(n_rows = 10) +
    theme_void() +
    coord_flip() +
    scale_fill_brewer(palette = "RdYlGn", direction = 1) +
    scale_color_identity() +
    labs(title = "Where the taxes in Lausanne Go") +
    theme(legend.title = element_blank())

waffle_cahrt

```
